{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\ReactProjects\\\\Scraper\\\\Calendar\\\\calendar\\\\src\\\\components\\\\appointmentsummary\\\\AppointmentSummary.jsx\";\nimport React from \"react\";\nimport './AppointmentSummary.css';\nimport EditCalendarItem from \"../EditCalendarItem/EditCalendarItem\";\n\nclass AppointmentSummary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.DisplayAppointments = this.DisplayAppointments.bind(this);\n    this.EditSelected = this.EditSelected.bind(this);\n    this.SelectCalendarItem = this.SelectCalendarItem.bind();\n    this.state = {\n      appointmentSummaryList: [],\n      selectedAppointment: '',\n      showEditCalendarItem: false\n    };\n  }\n\n  EditSelected(appointment) {\n    if (typeof appointment != undefined) this.setState({\n      showEditCalendarItem: true,\n      selectedAppointment: appointment\n    });\n  }\n\n  saveNewCalendarItem() {\n    var newItem = {};\n    newItem.id = this.state.appointmentSummaryList.length + 1;\n    newItem.selectedDay = 0;\n    newItem.subject = \"\";\n    newItem.text = \"\";\n    newItem.time = \"\";\n    newItem.date = \"\";\n    this.state.appointmentSummaryList.push(newItem);\n  }\n\n  SelectCalendarItem() {\n    this.setState({\n      showEditCalendarItem: true,\n      selectedAppointment: appt\n    });\n  }\n\n  DisplayAppointments() {\n    let appointmentDisplay;\n\n    if (typeof this.state.appointmentSummaryList !== 'undefined' && this.state.appointmentSummaryList.length > 0) {\n      appointmentDisplay = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.state.appointmentSummaryList.map(function (appointment) {\n        if (typeof appointment !== undefined) {\n          if (appointment.day === this.props.selectedDay) {\n            return React.createElement(\"li\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            }, appointment.subject, \" : \", appointment.text);\n          }\n        }\n      }));\n    }\n  }\n\n  render() {\n    let todayAppointments;\n    let todaySummary = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" Found \", this.props.appointments.length, \" appointments\");\n    let selDay = this.props.selectedDay; //filter the appointments to be displayed by the selected day\n\n    let filteredItems = this.props.appointments.map(function (appt) {\n      if (selDay == appt.selectedDay) {\n        return appt;\n      }\n    }); //if there are appointments for selected day then sort them by appointment time\n\n    if (typeof filteredItems[0] !== 'undefined') {\n      let clickEvent = this.EditSelected; //sort the days appointments\n\n      filteredItems.sort((a, b) => a.seconds > b.seconds ? 1 : -1); //create the html table to display the apointments in \n\n      todayAppointments = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"appointmentSummary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Subject\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Text\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Date\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, filteredItems.map(function (appt) {\n        if (selDay == appt.selectedDay) {\n          return React.createElement(\"tr\", {\n            className: \"summaryTableItem\",\n            key: appt.time,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, appt.subject), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, appt.text), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, appt.time), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, appt.date), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, \" \", React.createElement(\"span\", {\n            onClick: this.SelectCalendarItem,\n            className: \"selectToEdit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, \"Select\")));\n        }\n      }))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.props.selectedDay, \" :\", todaySummary, \" \"), todayAppointments, React.createElement(EditCalendarItem, {\n      isOpen: this.state.showEditCalendarItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AppointmentSummary;","map":{"version":3,"sources":["D:/Development/ReactProjects/Scraper/Calendar/calendar/src/components/appointmentsummary/AppointmentSummary.jsx"],"names":["React","EditCalendarItem","AppointmentSummary","Component","constructor","props","DisplayAppointments","bind","EditSelected","SelectCalendarItem","state","appointmentSummaryList","selectedAppointment","showEditCalendarItem","appointment","undefined","setState","saveNewCalendarItem","newItem","id","length","selectedDay","subject","text","time","date","push","appt","appointmentDisplay","map","day","render","todayAppointments","todaySummary","appointments","selDay","filteredItems","clickEvent","sort","a","b","seconds"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './AppointmentSummary.css';\r\nimport EditCalendarItem from \"../EditCalendarItem/EditCalendarItem\"\r\n\r\n\r\nclass AppointmentSummary extends React.Component{\r\n\r\n \r\n    constructor(props){\r\n        super(props)\r\n        this.DisplayAppointments = this.DisplayAppointments.bind(this);\r\n        this.EditSelected = this.EditSelected.bind(this);\r\n        this.SelectCalendarItem = this.SelectCalendarItem.bind();\r\n        this.state={\r\n            appointmentSummaryList:[] ,\r\n            selectedAppointment:'',\r\n            showEditCalendarItem:false\r\n        }\r\n      }\r\n      EditSelected(appointment){\r\n          if (typeof appointment != undefined)\r\n            this.setState({showEditCalendarItem:true,selectedAppointment:appointment});\r\n      }\r\n\r\n      saveNewCalendarItem(){\r\n          var newItem={};\r\n          newItem.id =this.state.appointmentSummaryList.length+1;\r\n          newItem.selectedDay = 0;\r\n          newItem.subject= \"\";\r\n          newItem.text = \"\";\r\n          newItem.time = \"\";\r\n          newItem.date = \"\";\r\n          this.state.appointmentSummaryList.push(newItem);\r\n      }\r\n\r\n      SelectCalendarItem(){\r\n        this.setState({showEditCalendarItem:true,selectedAppointment:appt});\r\n      }\r\n      DisplayAppointments(){\r\n\r\n        let appointmentDisplay;\r\n        if (typeof this.state.appointmentSummaryList !=='undefined'&& this.state.appointmentSummaryList.length >0){\r\n          \r\n\r\n            appointmentDisplay = <div>\r\n                        \r\n                    \r\n           { this.state.appointmentSummaryList.map(function (appointment){\r\n            if(typeof appointment!==undefined){\r\n             \r\n                if (appointment.day === this.props.selectedDay){ \r\n                    \r\n                    return (<li>{appointment.subject} : {appointment.text}</li>)\r\n\r\n                }\r\n            }\r\n            \r\n        })}\r\n        </div>\r\n        \r\n    }\r\n      }\r\n\r\n    render(){\r\n        let todayAppointments;\r\n        let todaySummary = <span> Found {this.props.appointments.length} appointments</span>; \r\n        let selDay = this.props.selectedDay;      \r\n        //filter the appointments to be displayed by the selected day\r\n        let filteredItems = this.props.appointments.map( function(appt){\r\n            if( selDay== appt.selectedDay){\r\n                return appt;\r\n            }\r\n        });\r\n        //if there are appointments for selected day then sort them by appointment time\r\n        if(typeof filteredItems[0] !== 'undefined'){\r\n            let clickEvent =  this.EditSelected;\r\n            //sort the days appointments\r\n            filteredItems.sort((a, b) => (a.seconds > b.seconds) ? 1 : -1)\r\n            //create the html table to display the apointments in \r\n            todayAppointments = <div ><table className=\"appointmentSummary\"><thead><tr><th>Subject</th><th>Text</th><th>Time</th><th>Date</th></tr></thead><tbody>\r\n            { \r\n                filteredItems.map( function(appt){            \r\n                if( selDay== appt.selectedDay){\r\n                        return <tr className=\"summaryTableItem\" key={appt.time}><td>{appt.subject}</td><td>{appt.text}</td>\r\n                        <td>{appt.time}</td><td>{appt.date}</td><td > <span onClick={this.SelectCalendarItem} className=\"selectToEdit\">Select</span></td></tr>\r\n                    }\r\n                })         \r\n            }\r\n            </tbody>\r\n            </table>\r\n            </div>\r\n        }\r\n           \r\n        return(\r\n            <div >\r\n                <span></span>\r\n                <span>{this.props.selectedDay} :{todaySummary} </span>\r\n                {todayAppointments}\r\n                <EditCalendarItem isOpen={this.state.showEditCalendarItem}></EditCalendarItem>\r\n                \r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nexport default AppointmentSummary;\r\n"]},"metadata":{},"sourceType":"module"}